<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.project.dao.PraiseMapper">
    <resultMap id="BaseResultMap" type="com.company.project.model.Praise">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="praise_id" jdbcType="INTEGER" property="praiseId" />
        <result column="praise_from" jdbcType="INTEGER" property="praiseFrom" />
        <result column="praise_to" jdbcType="VARCHAR" property="praiseTo" />
        <result column="content" jdbcType="INTEGER" property="content" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
        <result column="last_update_by" jdbcType="VARCHAR" property="lastUpdateBy" />
        <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate" />
        <result column="enable_flag" jdbcType="INTEGER" property="enableFlag" />
    </resultMap>
    <select id="getPraiseToList" resultMap="BaseResultMap">
        SELECT p.* FROM `praise` p
        <where>
            <if test="beginDate != null and beginDate != ''">
                AND p.create_date &gt;= #{beginDate}
            </if>
            <if test="endDate != null and endDate != ''">
                AND p.create_date &lt; DATE_ADD(
                STR_TO_DATE(#{endDate}, '%Y-%m-%d %H'),
                INTERVAL 1 DAY
                )
            </if>
            <if test="userName != null and userName != ''">
                AND p.praise_from = #{userName}
            </if>
        </where>
        order by p.create_date desc
    </select>
    <select id="getPraiseCountInfo" resultType="com.company.project.dto.PraiseCountDTO">
        SELECT
            COUNT(1) as praiseCount
        FROM
            `praise` p
        WHERE p.`create_date` &gt;= #{praiseDateBegin}
              AND p.`create_date` &lt; DATE_ADD(
                STR_TO_DATE(#{praiseDateEnd}, '%Y-%m-%d %H'),
                INTERVAL 1 DAY
        )
    </select>
    <select id="getPraiseList" resultMap="BaseResultMap">
        SELECT
        CONCAT(
        u.`nick_name`,
        '(',
        u.`user_name`,
        ')'
        ) uniqueName,
        IFNULL(t1.give, 0) give,
        IFNULL(t2.gain, 0) gain,
        IFNULL(t2.praise_to, 0) praise_to,
        IFNULL(t1.praise_from, 0) praise_from,
        u.user_name as username
        FROM
        users u
        LEFT JOIN
        (SELECT
        COUNT(1) give,
        p.`praise_from`
        FROM
        `praise` p
        <where>
            <if test="praiseDateBegin != null and praiseDateBegin != ''">
                AND p.create_date &gt;= #{praiseDateBegin}
            </if>
            <if test="praiseDateEnd != null and praiseDateEnd != ''">
                AND p.create_date &lt; DATE_ADD(
                STR_TO_DATE(#{praiseDateEnd}, '%Y-%m-%d %H'),
                INTERVAL 1 DAY
                )
            </if>
        </where>
        GROUP BY p.`praise_from`) t1
        ON t1.praise_from = u.`user_name`
        LEFT JOIN
        (SELECT
        COUNT(1) gain,
        p.`praise_to`
        FROM
        `praise` p
        <where>
            <if test="praiseDateBegin != null and praiseDateBegin != ''">
                AND p.create_date &gt;= #{praiseDateBegin}
            </if>
            <if test="praiseDateEnd != null and praiseDateEnd != ''">
                AND p.create_date &lt; DATE_ADD(
                STR_TO_DATE(#{praiseDateEnd}, '%Y-%m-%d %H'),
                INTERVAL 1 DAY
                )
            </if>
        </where>
        GROUP BY p.`praise_to`) t2
        ON t2.praise_to = u.`user_name`

        <where>
            AND u.enable_flag = 1
            <if test="userName != null and userName != ''">
                AND u.user_name = #{userName}
            </if>
        </where>
        ORDER BY t2.gain DESC
    </select>
    <select id="getPraiseDetail" resultType="com.company.project.dto.PraiseListDTO">
        SELECT
        u.`id`,
        u.`user_name` AS userName,
        u.`nick_name` AS nickName,
        u.`portrait`,
        u.`signature`,
        u.`sex`,
        p.`content`,
        p.`create_date` createDate,
        p.`praise_id` praiseId
        FROM
        users u
        JOIN `praise` p
        <if test="praiseTo != null and praiseTo != ''">
            ON u.`user_name` = p.`praise_from`
        </if>
        <if test="praiseFrom != null and praiseFrom != ''">
            ON u.`user_name` = p.`praise_to`
        </if>
        <where>
            <if test="praiseDateBegin != null and praiseDateBegin != ''">
                AND p.create_date &gt;= #{praiseDateBegin}
            </if>
            <if test="praiseDateEnd != null and praiseDateEnd != ''">
                AND p.create_date &lt; DATE_ADD(
                STR_TO_DATE(#{praiseDateEnd}, '%Y-%m-%d %H'),
                INTERVAL 1 DAY
                )
            </if>
            <if test="praiseTo != null and praiseTo != ''">
                AND p.praise_to = #{praiseTo}
            </if>
            <if test="praiseFrom != null and praiseFrom != ''">
                AND p.praise_from = #{praiseFrom}
            </if>
        </where>
    </select>
    <select id="getPraiseToPieChartData" resultType="com.company.project.dto.PieChartDTO">
        SELECT
            u.`nick_name` as name,
            b.praiseNum
        FROM
            users u
            JOIN
            (SELECT
                 p.`praise_to`,
                 COUNT(1) praiseNum
             FROM
                 `praise` p
             WHERE p.`praise_from` = #{userName}
             GROUP BY p.`praise_to`
             LIMIT 0, 12) b
                ON u.user_name = b.praise_to
    </select>
    <select id="getPraiseFromPieChartData" resultType="com.company.project.dto.PieChartDTO">
        SELECT
            u.`nick_name` name,
            b.praiseNum
        FROM
            users u
            JOIN
            (SELECT
                 p.`praise_from`,
                 COUNT(1) praiseNum
             FROM
                 `praise` p
             WHERE p.`praise_to` = #{userName}
             GROUP BY p.`praise_from`
             LIMIT 0, 12) b
                ON u.user_name = b.praise_from
    </select>
    <select id="getPraiseTop3" resultMap="BaseResultMap">
        SELECT
        CONCAT(
        u.`nick_name`,
        '(',
        u.`user_name`,
        ')'
        ) uniqueName,
        IFNULL(t2.gain, 0) gain,
        IFNULL(t2.praise_to, 0) praise_to,
        u.user_name as username
        FROM
        users u
        LEFT JOIN
        (SELECT
        COUNT(1) gain,
        p.`praise_to`
        FROM
        `praise` p
        <where>
            <if test="beginDate != null and beginDate != ''">
                AND p.create_date &gt;= #{beginDate}
            </if>
            <if test="endDate != null and endDate != ''">
                AND p.create_date &lt; DATE_ADD(
                STR_TO_DATE(#{endDate}, '%Y-%m-%d'),
                INTERVAL 1 DAY
                )
            </if>
        </where>
        GROUP BY p.`praise_to`) t2
        ON t2.praise_to = u.`user_name`
        ORDER BY t2.gain DESC
        limit 0,3
    </select>
    <select id="getProbablyPraise" resultType="java.util.HashMap">
        <include refid="praiseToMe0" />
        union all
        <include refid="praiseToMe1" />
        union all
        <include refid="praiseFromMe0" />
        union all
        <include refid="praiseFromMe1" />
        union all
        <include refid="praiseTo0" />
        union all
        <include refid="praiseFrom2" />
        union all
        <include refid="praiseFrom3" />
        union all
        <include refid="praiseMin" />
    </select>
    <sql id="praiseToMe0">
        <!--本周赞我最多-->
        SELECT
            praise_from AS username,
            100 AS weight
        FROM
            (SELECT
                 praise_from,
                 COUNT(1) qty
             FROM
                 praise p join users u on u.user_name = p.praise_from and u.enable_flag != 0
             WHERE praise_to = #{userName} and praise_from != #{userName}
             <include refid="whereSql" />
             GROUP BY praise_from
             ORDER BY COUNT(1) DESC LIMIT 3) t1
    </sql>
    <sql id="praiseToMe1">
        <!--历史赞我最多-->
        SELECT
            praise_from AS username,
            90 AS weight
        FROM
            (SELECT
                 praise_from,
                 COUNT(1) qty
             FROM
                 praise p join users u on u.user_name = p.praise_from and u.enable_flag != 0
             WHERE praise_to = #{userName}
             GROUP BY praise_from
             ORDER BY COUNT(1) DESC LIMIT 3) t1
    </sql>
    <sql id="praiseFromMe0">
        <!--历史我赞的最多的-->
        SELECT
            praise_to AS username,
            80 AS weight
        FROM
            (SELECT
                 praise_to,
                 COUNT(1)
             FROM
                 praise p join users u on u.user_name = p.praise_to and u.enable_flag != 0
             WHERE praise_from = #{userName}
             GROUP BY praise_to
             ORDER BY COUNT(1) DESC LIMIT 2) t1
    </sql>
    <sql id="praiseFromMe1">
        <!--本周获赞最多的-->
        SELECT
            praise_to AS username,
            70 AS weight
        FROM
            (SELECT
                 praise_to,
                 COUNT(1)
             FROM
                 praise p
             where praise_to != #{userName}
             <include refid="whereSql" />
             GROUP BY praise_to
             ORDER BY COUNT(1) DESC LIMIT 2) t1
    </sql>
    <sql id="praiseTo0">
        <!--历史获赞最多的-->
        SELECT
            praise_to AS username,
            60 AS weight
        FROM
            (SELECT
                 praise_to,
                 COUNT(1)
             FROM
                 praise p join users u on u.user_name = p.praise_to and u.enable_flag != 0
             where praise_to != #{userName}
             GROUP BY praise_to
             ORDER BY COUNT(1) DESC LIMIT 2) t1
    </sql>
    <sql id="praiseFrom2">
        <!--本周点赞最多的-->
        SELECT
            praise_from AS username,
            50 AS weight
        FROM
            (SELECT
                 praise_from,
                 COUNT(1) qty
             FROM
                 praise p
             where praise_from != #{userName}
             <include refid="whereSql" />
             GROUP BY praise_from
             ORDER BY COUNT(1) DESC LIMIT 2) t1
    </sql>
    <sql id="praiseFrom3">
        <!--历史点赞最多的-->
        SELECT
            praise_from AS username,
            40 AS weight
        FROM
            (SELECT
                 praise_from,
                 COUNT(1) qty
             FROM
                 praise
             where praise_from != #{userName}
             GROUP BY praise_from
             ORDER BY COUNT(1) DESC LIMIT 2) t1
    </sql>
    <sql id="praiseMin">
        SELECT
            praise_to AS username,
            30 AS weight
        FROM
            (SELECT
                 praise_to,
                 COUNT(1) qty
             FROM
                 `praise` p
             WHERE p.`praise_to` IN
                   (SELECT
                        praise_from
                    FROM
                        `praise` p
                    where 1=1
                    <include refid="whereSql" />
                    GROUP BY praise_from)
             <include refid="whereSql" />
             GROUP BY praise_to
             ORDER BY qty
             LIMIT 1) t1
        GROUP BY praise_to
    </sql>
    <sql id="whereSql">
        <if test="beginDate != null and beginDate != ''">
            AND p.create_date &gt;= #{beginDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND p.create_date &lt; DATE_ADD(
            STR_TO_DATE(#{endDate}, '%Y-%m-%d'),
            INTERVAL 1 DAY
            )
        </if>
    </sql>
    <select id="selectPraiseUserToEmail">
        <include refid="praiseToMe0" />
        union all
        <include refid="praiseToMe1" />
    </select>
    <sql id="to">
        SELECT
            u.`nick_name` as name,
            b.praiseNum
        FROM
            users u
            JOIN
            (SELECT
                 p.`praise_to`,
                 COUNT(1) praiseNum
             FROM
                 `praise` p
             WHERE p.`praise_from` = #{userName} and p.praise_to != #{userName}
             GROUP BY p.`praise_to`
             LIMIT 0, 3) b
                ON u.user_name = b.praise_to
    </sql>
    <sql id="from">
        SELECT
            u.`nick_name` name,
            b.praiseNum
        FROM
            users u
            JOIN
            (SELECT
                 p.`praise_from`,
                 COUNT(1) praiseNum
             FROM
                 `praise` p
             WHERE p.`praise_to` = #{userName} and p.praise_from != #{userName}
             GROUP BY p.`praise_from`
             LIMIT 0, 3) b
                ON u.user_name = b.praise_from
    </sql>

    <insert id="add" useGeneratedKeys="true" keyProperty="praiseId" keyColumn="praiseId">
        INSERT INTO `praisesystem`.`praise` (
            `praise_from`,
            `praise_to`,
            `content`,
            `create_by`,
            `last_update_by`
        )
        VALUES
            (
                #{praiseTo},
                #{praiseFrom},
                #{content},
                #{createBy},
                #{lastUpdateBy}
            );
    </insert>
</mapper>